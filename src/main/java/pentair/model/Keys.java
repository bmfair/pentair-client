package pentair.model;

import pentair.map.FormatException;
import pentair.map.Params;
import pentair.map.Parser;

public enum Keys {

	// Likely special keys: "RTHIS"

	ABSMAX(Parser.INTEGER), ABSMAXNC, ABSMIN, ABSMINNC, ABSTIM, ACCEL, ACT1, ACT2, ACT3, ACT4, ADDRESS, ADJ, ALARM,
	ALK(Parser.INTEGER), ALPHA, AMERCA, AMPM, ANLGEXP, AQUA, ASSIGN, AUTO, AVAIL, BADGE, BAKFLO, BAKTIM, BASIC, BATT,
	BCOUNT, BLUE, BLUER, BOOST, BYPASS, CALC(Parser.INTEGER), CALIB, CARIB, CHILD, CITY, CLEAN, CLK24A, CLRCASC, CNFG,
	COLOR, COLORWL, COMERR, COMETHR, COMI2C, COMLNK, COMSPI, COMUART(Parser.INTEGER), COMUSB, CONCUR, COOL, COOLING,
	COUNTRY, COVER, CURRENT, CUSTOM, CUTOFF, CYACID(Parser.INTEGER), CYCTIM, DAY, DBGMSG1, DBGMSG2, DBGMSG3, DECR,
	DEVCONN, DEVICE, DFGATE, DFLT, DHCP, DIMMER, DISPLYJPG, DLSTIM, DLYCNCL, DLYOFF, DLYON, DNSSERV, DOSE, DRAIN,
	DRVALM, DRVWRN, DUAL, EMAIL, EMAIL2, EMPTY, ENABLE, END, ENGLISH, EXTINSTR, FAULT, FD485TEST, FDCONTACT, FDDISPLAY,
	FDFWVER, FDRELAY, FDTEMP, FDVALVE, FEATR, FILTER, FLOOR, FLOW, FLOWDLY(Parser.ON_OFF_DOUBLE), FREEZE, FREQ, GAL, GENERIC, GLOW, GLOWT,
	GPM(Parser.INTEGER), GPMNC, GREEN, GREENR, GROUP, HCOMBO, HEATING, HITMP, HITMPNC, HNAME, HOLD, HR24, HTMODE, HTPMP,
	HTSRC, HTSRCTYP, I10D, I10P, I10PS, I10X, I5P, I5PS, I5X, I8P, I8PS, ICHLOR, ICP, INCR, INTAKE, INTELLI, INVALID,
	IPADY, IS10, IS4, IS5, LASTHTR, LED, LEFT, LEGACY, LIGHT, LIMIT, LISTORD, LITGRN, LITRED, LITSHO, LIVLST, LOCAL,
	LOCKOUT, LOCX, LOCY, LOG, LOGO, LOTMP, LOTMPNC, LPM, LSTART, LSTOP, LSTTMP, MACADY, MAGIC1, MAGIC2, MAGICMOD,
	MAGNTA, MAGNTAR, MANHT, MANOVR, MANUAL, MASKSM, MASTER, MAXF(Parser.INTEGER), MAXFNC, MECH, MENU, METRIC, MINF,
	MINFNC, MIX, MNFDAT, MODULE, MONITOR, NATUAL, NETWRK, NITE, NOFLO(Parser.ON_OFF_DOUBLE), NONE, NORMAL, OBJNAM,
	OBJREV, OBJTYP, OCP, OFFSET, ORP, ORPCHK, ORPFED, ORPHI, ORPLIM, ORPLO, ORPMOD, ORPSET(Parser.INTEGER), ORPTIM,
	ORPTNK(Parser.INTEGER), ORPTYP, ORPVAL(Parser.DOUBLE), ORPVOL(Parser.INTEGER), OVRFRZ, OVROFF, OVRON, PANID, PARENT,
	PARTY, PASSWRD, PERMIT, PHCHK, PHFED, PHHI, PHLIM, PHLO, PHMOD, PHONE, PHONE2, PHOTON, PHPRIOR,
	PHSET(Parser.DOUBLE), PHTIM, PHTNK(Parser.INTEGER), PHTYP, PHVAL(Parser.DOUBLE), PHVOL(Parser.INTEGER), PMPCIRC,
	POOL, POOLFRZ, POSIT, PRESS, PRIM, PRIMFLO(Parser.INTEGER), PRIMTIM(Parser.INTEGER), PROBE(Parser.INTEGER), PROBENC,
	PROGRES, PROPLST, PROPNAME, PWR(Parser.INTEGER), QUALTY(Parser.DOUBLE), QUEUE, RADIO, RANGE, REBOOT, RECALL, RECENT,
	REDR, REMBTN, RESET, RETURN, RIGHT, RLY, RNSTIM, ROMAN, ROTATE, ROYAL, RPM(Parser.INTEGER), RUNON, SALT, SALTLO,
	SAML, SAMMOD, SAVLST, SCHED, SEC, SENSE, SERNUM, SESSION, SETADV, SETBASE, SETPT, SETTMP(Parser.INTEGER), SETTMPNC,
	SHARE, SHOMNU, SHUTDOWN, SINDEX(Parser.DOUBLE), SINGLE, SMART, SMTSRT, SNAME, SOLAR, SOURCE, SPA, SPACMD, SPEED,
	SPIID, SPILL, SRIS, SSET, STAMSG, STATE, STATIC, SUBNET, SUBTYP, SUM, SUPER, SUPORT, SWIM, SYNC, SYSTEM, SYSTIM,
	TEMPNC, THUMP, TIME, TIMOUT, TIMZON, TOUCHTEST, TURNS, TXRPC, TXRREM, ULTRA, UNITS, UPDATE, URL, USE, VACFLO,
	VACTIM, VALVEXP, VCAP, VERYLO, VLVCIRC, VOLMOVD, VOLNC, VOLT, VSF, WAIT, WAPNET, WAPPW, WCP, WHITE, WHITER, XCP,
	ZIP, ZZ_ALL,

	// Not in the list, adding manually:
	STATUS, TEMP(Parser.INTEGER);

	private Keys() {
		this(null);
	}

	private final Parser<?> parser;

	private Keys(Parser<?> parser) {
		this.parser = parser;
	}

	public Object parse(String value) {
		if (parser == null)
			return value;
		try {
			return parser.parse(value);
		} catch (FormatException e) {
			return null;
		}
	}

	public Object getIfPresent(Params p) {
		String v = p.getProperties().get(this.name());
		if (v == null)
			return v;
		return parse(v);
	}

	public Double getIfDouble(Params p) {
		String v = p.getProperties().get(this.name());
		if (v != null) {
			try {
				return Double.parseDouble(v);
			} catch (NumberFormatException e) {
				System.err.println("Error parsing double: " + v);
			}
		}
		return null;
	}

}
